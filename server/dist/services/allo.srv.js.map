{"version":3,"sources":["../../src/services/allo.srv.js"],"names":["db","require","module","exports","findAll","success","error","query","connection","err","rows","console","findActive","findActiveWithId","id","findWithId","updateActive","state"],"mappings":";;AAAA,IAAIA,KAAKC,QAAQ,UAAR,CAAT;;AAEAC,OAAOC,OAAP,CAAeC,OAAf,GAAyB,UAACC,OAAD,EAAUC,KAAV,EAAoB;;AAEzC,QAAIC,QAAQ,oBAAZ;;AAEAP,OAAGQ,UAAH,CAAcD,KAAd,CAAoBA,KAApB,EAA2B,UAACE,GAAD,EAAMC,IAAN,EAAe;;AAEtC,YAAI,CAACD,GAAL,EAAU;AACNJ,oBAAQK,IAAR;AAEH,SAHD,MAGO;AACHC,oBAAQL,KAAR,CAAcG,GAAd;AACAH,kBAAMG,GAAN;AACH;AACJ,KATD;AAUH,CAdD;;AAgBAP,OAAOC,OAAP,CAAeS,UAAf,GAA4B,UAACP,OAAD,EAAUC,KAAV,EAAoB;;AAE5C,QAAIC,QAAQ,qCAAZ;;AAEAP,OAAGQ,UAAH,CAAcD,KAAd,CAAoBA,KAApB,EAA2B,UAACE,GAAD,EAAMC,IAAN,EAAe;;AAEtC,YAAI,CAACD,GAAL,EAAU;AACNJ,oBAAQK,IAAR;AAEH,SAHD,MAGO;AACHC,oBAAQL,KAAR,CAAcG,GAAd;AACAH,kBAAMG,GAAN;AACH;AACJ,KATD;AAUH,CAdD;;AAgBAP,OAAOC,OAAP,CAAeU,gBAAf,GAAkC,UAACC,EAAD,EAAKT,OAAL,EAAcC,KAAd,EAAwB;;AAEtD,QAAIC,QAAQ,gDAAZ;;AAEAP,OAAGQ,UAAH,CAAcD,KAAd,CAAoBA,KAApB,EAA2B,CAACO,EAAD,CAA3B,EAAiC,UAACL,GAAD,EAAMC,IAAN,EAAe;;AAE5C,YAAI,CAACD,GAAL,EAAU;AACNJ,oBAAQK,IAAR;AAEH,SAHD,MAGO;AACHC,oBAAQL,KAAR,CAAcG,GAAd;AACAH,kBAAMG,GAAN;AACH;AACJ,KATD;AAUH,CAdD;;AAgBAP,OAAOC,OAAP,CAAeY,UAAf,GAA4B,UAACD,EAAD,EAAKT,OAAL,EAAcC,KAAd,EAAwB;;AAEhD,QAAIC,QAAQ,iCAAZ;;AAEAP,OAAGQ,UAAH,CAAcD,KAAd,CAAoBA,KAApB,EAA2B,CAACO,EAAD,CAA3B,EAAiC,UAACL,GAAD,EAAMC,IAAN,EAAe;;AAE5C,YAAI,CAACD,GAAL,EAAU;AACNJ,oBAAQK,IAAR;AAEH,SAHD,MAGO;AACHC,oBAAQL,KAAR,CAAcG,GAAd;AACAH,kBAAMG,GAAN;AACH;AACJ,KATD;AAUH,CAdD;;AAgBAP,OAAOC,OAAP,CAAea,YAAf,GAA8B,UAACF,EAAD,EAAIG,KAAJ,EAAWZ,OAAX,EAAoBC,KAApB,EAA8B;;AAExD,QAAIC,QAAQ,yCAAZ;;AAEAP,OAAGQ,UAAH,CAAcD,KAAd,CAAoBA,KAApB,EAA2B,CAACU,KAAD,EAAOH,EAAP,CAA3B,EAAuC,UAACL,GAAD,EAAMC,IAAN,EAAe;;AAElD,YAAI,CAACD,GAAL,EAAU;AACNJ,oBAAQK,IAAR;AAEH,SAHD,MAGO;AACHC,oBAAQL,KAAR,CAAcG,GAAd;AACAH,kBAAMG,GAAN;AACH;AACJ,KATD;AAUH,CAdD","file":"allo.srv.js","sourcesContent":["let db = require('../db.js');\n\nmodule.exports.findAll = (success, error) => {\n\n    let query = 'SELECT * FROM allo';\n\n    db.connection.query(query, (err, rows) => {\n\n        if (!err) {\n            success(rows);\n\n        } else {\n            console.error(err);\n            error(err);\n        }\n    });\n};\n\nmodule.exports.findActive = (success, error) => {\n\n    let query = 'SELECT * FROM allo WHERE active = 1';\n\n    db.connection.query(query, (err, rows) => {\n\n        if (!err) {\n            success(rows);\n\n        } else {\n            console.error(err);\n            error(err);\n        }\n    });\n};\n\nmodule.exports.findActiveWithId = (id, success, error) => {\n\n    let query = 'SELECT * FROM allo WHERE active = 1 AND id = ?';\n\n    db.connection.query(query, [id], (err, rows) => {\n\n        if (!err) {\n            success(rows);\n\n        } else {\n            console.error(err);\n            error(err);\n        }\n    });\n};\n\nmodule.exports.findWithId = (id, success, error) => {\n\n    let query = 'SELECT * FROM allo WHERE id = ?';\n\n    db.connection.query(query, [id], (err, rows) => {\n\n        if (!err) {\n            success(rows);\n\n        } else {\n            console.error(err);\n            error(err);\n        }\n    });\n};\n\nmodule.exports.updateActive = (id,state, success, error) => {\n\n    let query = 'UPDATE allo SET active = ? WHERE id = ?';\n\n    db.connection.query(query, [state,id], (err, rows) => {\n\n        if (!err) {\n            success(rows);\n\n        } else {\n            console.error(err);\n            error(err);\n        }\n    });\n};"]}