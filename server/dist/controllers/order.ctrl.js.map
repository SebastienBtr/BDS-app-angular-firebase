{"version":3,"sources":["../../src/controllers/order.ctrl.js"],"names":["express","require","router","Router","orderService","get","req","res","console","log","findAll","orders","send","error","statusCode","errorCode","findAllNotFinish","alloId","params","findNotFinishForAlloId","post","id","removeOrder","end","correctOrderParam","order","isNaN","quantity","length","name","address","body","addOrder","state","updateInProgress","module","exports"],"mappings":"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","file":"order.ctrl.js","sourcesContent":["let express = require('express');\nlet router = express.Router();\n\nlet orderService = require('../services/order.srv.js');\n\nrouter.get('/all-orders', (req, res) => {\n\n    console.log(\"call to get all orders\");\n\n    orderService.findAll( (orders) => {\n        res.send(orders);\n\n    }, (error) => {\n        console.error(error);\n        res.statusCode = 401;\n        res.send({ errorCode: 'Error SQL when searching orders' });\n    });\n\n});\n\nrouter.get('/orders-not-finish', (req, res) => {\n\n    console.log(\"call to get all orders not finish\");\n\n    orderService.findAllNotFinish( (orders) => {\n        res.send(orders);\n\n    }, (error) => {\n        console.error(error);\n        res.statusCode = 401;\n        res.send({ errorCode: 'Error SQL when searching orders not finish' });\n    });\n\n});\n\nrouter.get('/orders-not-finish/:alloId', (req, res) => {\n\n    console.log(\"call to get orders for an allo\");\n\n    let alloId = req.params.alloId;\n\n    orderService.findNotFinishForAlloId(alloId, (orders) => {\n        res.send(orders);\n\n    }, (error) => {\n        console.error(error);\n        res.statusCode = 401;\n        res.send({ errorCode: 'Error SQL when searching orders not finish for alloId' });\n    });\n\n});\n\nrouter.post('/remove/:id', (req, res) => {\n\n    console.log(\"call to remove order\");\n\n    let id = req.params.id;\n\n    orderService.removeOrder(id, () => {\n        res.end();\n\n    }, (error) => {\n        console.error(error);\n        res.statusCode = 401;\n        res.send({ errorCode: 'Error SQL when remove an order' });\n    });\n\n});\n\nlet correctOrderParam =  (order) => {\n\n     if (isNaN(order.quantity)) {\n        return false;\n\n    } else if (order.quantity.length > 2) {\n        return false;\n\n    } else if (order.name == \"\") {\n        return false;\n\n    } else  if (order.name.length > 30) {\n        return false;\n\n    } else if (order.address == \"\") {\n        return false;\n\n    } else if (order.address.length > 60) {\n        return false;\n    }\n\n    return true;\n};\n\nrouter.post('/add-order', (req, res) => {\n\n    console.log(\"call to add order\");\n\n    let order = req.body.order;\n\n    if (!correctOrderParam(order)) {\n        console.error(error);\n        res.statusCode = 401;\n        res.send({ errorCode: 'Error : order fields are not correct' });\n    }\n\n    orderService.addOrder( order, () => {\n        res.end();\n\n    }, (error) => {\n        console.error(error);\n        res.statusCode = 401;\n        res.send({ errorCode: 'Error SQL when add an order' });\n    });\n\n});\n\nrouter.post('/update-in-progress/:id', (req, res) => {\n\n    console.log(\"call to update in progress\");\n\n    let id = req.params.id;\n    let state = req.body.state ? 1 : 0;\n\n    orderService.updateInProgress(id,state, () => {\n        res.end();\n\n    }, (error) => {\n        console.error(error);\n        res.statusCode = 401;\n        res.send({ errorCode: 'Error SQL when update in progress' });\n    });\n\n});\n\nmodule.exports = router;"]}